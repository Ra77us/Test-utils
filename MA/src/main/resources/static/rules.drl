import io.github.hephaestusmetrics.model.metrics.Metric;
import com.example.droolsprototype.DroolsPrototypeApplication;
import com.example.droolsprototype.demo.ExecutorWrapper
import com.kubiki.controller.commons.definitons.ActionInvoker
import com.kubiki.controller.sample.actions.ChangeDataSourceAction
import com.kubiki.controller.sample.dto.ChangeDataSourceArgs
import com.kubiki.controller.sample.dto.DataSource


// rate(http_server_requests_seconds_sum{uri="/test/get-data-slow"}[2m]) / rate(http_server_requests_seconds_count{uri="/test/get-data-slow"}[2m])
rule "test2"
    dialect "mvel"
    when
        executor : ExecutorWrapper()
        metric : Metric(
                    queryTag == "requestDuration",
                    value > 2
                    )
    then
        executor.execute(new ChangeDataSourceAction(new ChangeDataSourceArgs(DataSource.OLD_SOURCE, metric.getLabels().get("instance"))));
end

// rate(executor_queued_tasks{instance="util-service-1.kubiki:8080"}[5m])
// todo
rule "test3"
    dialect "mvel"
    when
        executor : ExecutorWrapper()
        metric : Metric(
                    name == "scalableExecutorQueuedTasks",
                    value > 2
                    )
    then
        executor.execute(new ChangeDataSourceAction(new ChangeDataSourceArgs(DataSource.OLD_SOURCE, metric.getLabels().get("instance"))));
end
